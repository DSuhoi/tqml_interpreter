<text[5]>

	<header>Impact</header>
	<info></info>
	
	<main>
		The Unix system had a significant impact on other operating systems. It achieved its reputation by its interactivity, 
		by providing the software at a nominal fee for educational use, by running on inexpensive hardware, and by being easy 
		to adapt and move to different machines. Unix was originally written in assembly language, but was soon rewritten in C, 
		a high-level programming language. Although this followed the lead of Multics and Burroughs, it was Unix that popularized the idea.<n><n>
		
		Unix had a drastically simplified file model compared to many contemporary operating systems: treating all kinds of files as 
		simple byte arrays. The file system hierarchy contained machine services and devices (such as printers, terminals, or disk 
		drives), providing a uniform interface, but at the expense of occasionally requiring additional mechanisms such as ioctl 
		and mode flags to access features of the hardware that did not fit the simple "stream of bytes" model. The Plan 9 operating 
		system pushed this model even further and eliminated the need for additional mechanisms.<n><n>
		
		Unix also popularized the hierarchical file system with arbitrarily nested subdirectories, originally introduced by Multics. 
		Other common operating systems of the era had ways to divide a storage device into multiple directories or sections, but 
		they had a fixed number of levels, often only one level. Several major proprietary operating systems eventually added recursive 
		subdirectory capabilities also patterned after Multics. DEC's RSX-11M's "group, user" hierarchy evolved into VMS directories, 
		CP/M's volumes evolved into MS-DOS 2.0+ subdirectories, and HP's MPE group.account hierarchy and IBM's SSP and OS/400 library 
		systems were folded into broader POSIX file systems.<n><n>
		
		Making the command interpreter an ordinary user-level program, with additional commands provided as separate programs, was another 
		Multics innovation popularized by Unix. The Unix shell used the same language for interactive commands as for scripting (shell 
		scripts – there was no separate job control language like IBM's JCL). Since the shell and OS commands were "just another program", 
		the user could choose (or even write) their own shell. New commands could be added without changing the shell itself. Unix's 
		innovative command-line syntax for creating modular chains of producer-consumer processes (pipelines) made a powerful programming 
		paradigm (coroutines) widely available. Many later command-line interpreters have been inspired by the Unix shell.<n><n>
		
		A fundamental simplifying assumption of Unix was its focus on newline-delimited text for nearly all file formats. There were no "binary" 
		editors in the original version of Unix – the entire system was configured using textual shell command scripts. The common denominator 
		in the I/O system was the byte – unlike "record-based" file systems. The focus on text for representing nearly everything made Unix 
		pipes especially useful and encouraged the development of simple, general tools that could be easily combined to perform more 
		complicated ad hoc tasks. The focus on text and bytes made the system far more scalable and portable than other systems. Over time, 
		text-based applications have also proven popular in application areas, such as printing languages (PostScript, ODF), and at the 
		application layer of the Internet protocols, e.g., FTP, SMTP, HTTP, SOAP, and SIP.<n><n>
		
		Unix popularized a syntax for regular expressions that found widespread use. The Unix programming interface became the basis for a 
		widely implemented operating system interface standard (POSIX, see above). The C programming language soon spread beyond Unix, 
		and is now ubiquitous in systems and applications programming.<n><n>
		
		Early Unix developers were important in bringing the concepts of modularity and reusability into software engineering practice, 
		spawning a "software tools" movement. Over time, the leading developers of Unix (and programs that ran on it) established a set 
		of cultural norms for developing software, norms which became as important and influential as the technology of Unix itself; 
		this has been termed the Unix philosophy.<n><n>
		
		The TCP/IP networking protocols were quickly implemented on the Unix versions widely used on relatively inexpensive computers, 
		which contributed to the Internet explosion of worldwide real-time connectivity, and which formed the basis for implementations 
		on many other platforms.<n><n>
		
		The Unix policy of extensive on-line documentation and (for many years) ready access to all system source code raised programmer 
		expectations, and contributed to the launch of the free software movement in 1983.<n><n>

		Enter a "Return" to return to the main page.<n>
		Enter a "Free Unix" to go to the "Free Unix and Unix-like variants" page.<n>
		Enter a "ARPANET" to go to the "ARPANET" page.<n>
	</main>
	
	<links>
		<&(unix.txt)[0] = "Return">
		<&()[1] = "Free Unix">
		<&()[2] = "ARPANET">
	</links>
	
</text>


<text[1]>

	<header>Free Unix and Unix-like variants</header>
	<info></info>
	<main>
		In 1983, Richard Stallman announced the GNU (short for "GNU's Not Unix") project, an ambitious effort to create a free software Unix-like 
		system; "free" in the sense that everyone who received a copy would be free to use, study, modify, and redistribute it. The GNU project's 
		own kernel development project, GNU Hurd, had not yet produced a working kernel, but in 1991 Linus Torvalds released the kernel Linux as 
		free software under the GNU General Public License. In addition to their use in the GNU operating system, many GNU packages – such as 
		the GNU Compiler Collection (and the rest of the GNU toolchain), the GNU C library and the GNU core utilities – have gone on to play 
		central roles in other free Unix systems as well.<n><n>
		
		Linux distributions, consisting of the Linux kernel and large collections of compatible software have become popular both with individual 
		users and in business. Popular distributions include Red Hat Enterprise Linux, Fedora, SUSE Linux Enterprise, openSUSE, Debian GNU/Linux, 
		Ubuntu, Linux Mint, Mandriva Linux, Slackware Linux, Arch Linux and Gentoo.<n><n>
		
		A free derivative of BSD Unix, 386BSD, was released in 1992 and led to the NetBSD and FreeBSD projects. With the 1994 settlement of a 
		lawsuit brought against the University of California and Berkeley Software Design Inc. (USL v. BSDi) by Unix System Laboratories, it 
		was clarified that Berkeley had the right to distribute BSD Unix for free if it so desired. Since then, BSD Unix has been developed in 
		several different product branches, including OpenBSD and DragonFly BSD.<n><n>
		
		Linux and BSD are increasingly filling the market needs traditionally served by proprietary Unix operating systems, as well as expanding 
		into new markets such as the consumer desktop and mobile and embedded devices. Because of the modular design of the Unix model, sharing 
		components is relatively common; consequently, most or all Unix and Unix-like systems include at least some BSD code, and some systems 
		also include GNU utilities in their distributions.<n><n>
		
		In a 1999 interview, Dennis Ritchie voiced his opinion that Linux and BSD operating systems are a continuation of the basis of the Unix 
		design, and are derivatives of Unix:<n>
			I think the Linux phenomenon is quite delightful, because it draws so strongly on the basis that Unix provided. Linux seems to be the 
			among the healthiest of the direct Unix derivatives, though there are also the various BSD systems as well as the more official offerings 
			from the workstation and mainframe manufacturers.<n><n>
			
		In the same interview, he states that he views both Unix and Linux as "the continuation of ideas that were started by Ken and me and many 
		others, many years ago".<n><n>
		
		OpenSolaris was the open-source counterpart to Solaris developed by Sun Microsystems, which included a CDDL-licensed kernel and a primarily 
		GNU userland. However, Oracle discontinued the project upon their acquisition of Sun, which prompted a group of former Sun employees and 
		members of the OpenSolaris community to fork OpenSolaris into the illumos kernel. As of 2014, illumos remains the only active open-source 
		System V derivative. <n><n>
		Enter a "Return" to return to the "Impact" page.
	</main>
	
	<links>
		<&()[5] = "Return">
	</links>
	
</text>


<text[1]>

	<header>ARPANET</header>
	<info></info>
	<main>
		In May 1975, RFC 681 described the development of Network Unix by the Center for Advanced Computation at the University of Illinois at 
		Urbana–Champaign. The system was said to "present several interesting capabilities as an ARPANET mini-host". At the time Unix required 
		a license from Bell Laboratories that at $20,000(US) was very expensive for non-university users, while an educational license cost just 
		$150. It was noted that Bell was "open to suggestions" for an ARPANET-wide license.<n><n>
		
		Specific features found beneficial were the local processing facilities, compilers, editors, a document preparation system, efficient file system 
		and access control, mountable and unmountable volumes, unified treatment of peripherals as special files, integration of the network control 
		program (NCP) within the Unix file system, treatment of network connections as special files that can be accessed through standard Unix I/O 
		calls, closing of all files on program exit, and the decision to be "desirable to minimize the amount of code added to the basic Unix kernel".<n><n>
		Enter a "Return" to return to the "Impact" page.
	</main>
	
	<links>
		<&()[5] = "Return">
	</links>
	
</text>
